<div style="width:95%;"><canvas id="canvas"></canvas></div>

<script>


window.chartColors = {
	green: 'rgb(9, 190, 3)',
	blue: 'rgb(2, 0, 70)',
};


		var lineChartData = {
			labels: [
{{range .}}'{{.Time}}',{{end}}
			],
			datasets: [{
				label: 'Temperature',
				borderColor: window.chartColors.blue,
				backgroundColor: window.chartColors.blue,
				fill: false,
				data: [{{range .}}{{.Temperature}},{{end}}],
				yAxisID: 'y-axis-1',
			}, {
				label: 'Humidity',
				borderColor: window.chartColors.green,
				backgroundColor: window.chartColors.green,
				fill: false,
				data: [{{range .}}{{.Humidity}},{{end}}],
				yAxisID: 'y-axis-2'
			}]
		};

		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myLine = Chart.Line(ctx, {
				data: lineChartData,
				options: {
					responsive: true,
					hoverMode: 'index',
					stacked: false,
					title: {
						display: true,
						text: 'meteo - Station chart'
					},
					scales: {
						yAxes: [{
							type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
							display: true,
							position: 'left',
							id: 'y-axis-1',
						}, {
							type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
							display: true,
							position: 'right',
							id: 'y-axis-2',

							// grid line settings
							gridLines: {
								drawOnChartArea: false, // only want the grid lines for one axis to show up
							},
						}],
					}
				}
			});
		};
	</script>
